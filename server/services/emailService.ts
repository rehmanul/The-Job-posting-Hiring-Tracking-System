import nodemailer from 'nodemailer';
import type { JobPosting, NewHire } from '@shared/schema';

export class EmailService {
  private transporter: nodemailer.Transporter | null = null;
  private recipients: string[] = [];
  private isEnabled = false;
  private lastEmailSent = 0;
  private emailCooldown = 60000; // 1 minute cooldown between emails

  constructor() {
    const gmailUser = process.env.GMAIL_USER;
    const gmailPassword = process.env.GMAIL_APP_PASSWORD;
    const emailRecipients = process.env.EMAIL_RECIPIENTS;

    if (!gmailUser || !gmailPassword) {
      console.warn('‚ö†Ô∏è Gmail credentials not provided - Email notifications disabled');
      return;
    }

    if (!emailRecipients) {
      console.warn('‚ö†Ô∏è EMAIL_RECIPIENTS not provided - Email notifications disabled');
      return;
    }

    this.transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: gmailUser,
        pass: gmailPassword,
      },
    });

    this.recipients = emailRecipients.split(',').map(email => email.trim());
    this.isEnabled = true;
  }

  async sendJobAlert(job: JobPosting): Promise<void> {
    if (!this.isEnabled || !this.transporter) return;
    
    // Rate limiting to prevent Gmail authentication issues
    const now = Date.now();
    if (now - this.lastEmailSent < this.emailCooldown) {
      console.log('‚è≥ Email cooldown active, skipping job alert');
      return;
    }
    
    try {
      this.lastEmailSent = now;
      const subject = `üÜï New Job Alert: ${job.jobTitle} at ${job.company}`;
      
      const html = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #2563EB, #059669); color: white; padding: 20px; text-align: center;">
            <h1 style="margin: 0; font-size: 24px;">üÜï New Job Alert!</h1>
          </div>
          
          <div style="padding: 20px; background: #f9fafb; border: 1px solid #e5e7eb;">
            <div style="background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
              <h2 style="color: #1f2937; margin: 0 0 15px 0;">${job.jobTitle}</h2>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Company:</strong> ${job.company}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Location:</strong> ${job.location || 'Not specified'}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Department:</strong> ${job.department || 'Not specified'}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Posted Date:</strong> ${job.postedDate ? job.postedDate.toDateString() : 'Unknown'}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Source:</strong> ${job.source}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Confidence Score:</strong> ${job.confidenceScore}%</p>
            </div>
            
            ${job.url ? `
            <div style="text-align: center;">
              <a href="${job.url}" style="background: #2563EB; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: bold;">
                View Job Posting
              </a>
            </div>
            ` : ''}
          </div>
          
          <div style="padding: 20px; text-align: center; color: #6b7280; font-size: 12px;">
            <p>This alert was generated by the Job Tracker System</p>
            <p>Found on ${new Date().toLocaleString()}</p>
          </div>
        </div>
      `;

      await this.transporter.sendMail({
        from: process.env.GMAIL_USER,
        to: this.recipients.join(', '),
        subject,
        html,
      });

      console.log('‚úÖ Job alert email sent');
      
    } catch (error: any) {
      console.error('‚ùå Failed to send job alert email:', error.message);
      // Don't throw error to prevent stopping the job scan
      if (error.code === 'EAUTH') {
        console.warn('‚ö†Ô∏è Gmail authentication failed - disabling email notifications temporarily');
        this.isEnabled = false;
      }
    }
  }

  async sendHireAlert(hire: NewHire): Promise<void> {
    if (!this.isEnabled || !this.transporter) return;
    
    // Rate limiting to prevent Gmail authentication issues
    const now = Date.now();
    if (now - this.lastEmailSent < this.emailCooldown) {
      console.log('‚è≥ Email cooldown active, skipping hire alert');
      return;
    }
    
    try {
      this.lastEmailSent = now;
      const subject = `üëã New Hire Alert: ${hire.personName} at ${hire.company}`;
      
      const html = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #7C3AED, #059669); color: white; padding: 20px; text-align: center;">
            <h1 style="margin: 0; font-size: 24px;">üëã New Hire Detected!</h1>
          </div>
          
          <div style="padding: 20px; background: #f9fafb; border: 1px solid #e5e7eb;">
            <div style="background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
              <h2 style="color: #1f2937; margin: 0 0 15px 0;">${hire.personName}</h2>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Company:</strong> ${hire.company}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Position:</strong> ${hire.position}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Start Date:</strong> ${hire.startDate ? hire.startDate.toDateString() : 'Unknown'}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Source:</strong> ${hire.source}</p>
              <p style="color: #6b7280; margin: 5px 0;"><strong>Confidence Score:</strong> ${hire.confidenceScore}%</p>
            </div>
            
            ${hire.linkedinProfile ? `
            <div style="text-align: center;">
              <a href="${hire.linkedinProfile}" style="background: #7C3AED; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: bold;">
                View LinkedIn Profile
              </a>
            </div>
            ` : ''}
          </div>
          
          <div style="padding: 20px; text-align: center; color: #6b7280; font-size: 12px;">
            <p>This alert was generated by the Job Tracker System</p>
            <p>Found on ${new Date().toLocaleString()}</p>
          </div>
        </div>
      `;

      await this.transporter.sendMail({
        from: process.env.GMAIL_USER,
        to: this.recipients.join(', '),
        subject,
        html,
      });

      console.log('‚úÖ Hire alert email sent');
      
    } catch (error: any) {
      console.error('‚ùå Failed to send hire alert email:', error.message);
      // Don't throw error to prevent stopping the hire scan
      if (error.code === 'EAUTH') {
        console.warn('‚ö†Ô∏è Gmail authentication failed - disabling email notifications temporarily');
        this.isEnabled = false;
      }
    }
  }

  async sendDailySummary(
    jobsFound: number, 
    hiresFound: number, 
    companiesScanned: number, 
    successRate: number
  ): Promise<void> {
    if (!this.isEnabled || !this.transporter) return;
    
    try {
      const subject = `üìä Daily Job Tracker Summary - ${new Date().toLocaleDateString()}`;
      
      const html = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #2563EB, #059669); color: white; padding: 20px; text-align: center;">
            <h1 style="margin: 0; font-size: 24px;">üìä Daily Summary</h1>
            <p style="margin: 5px 0 0 0; opacity: 0.9;">${new Date().toLocaleDateString()}</p>
          </div>
          
          <div style="padding: 20px; background: #f9fafb; border: 1px solid #e5e7eb;">
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 20px;">
              <div style="background: white; padding: 20px; border-radius: 8px; text-align: center;">
                <h3 style="color: #059669; margin: 0 0 10px 0; font-size: 32px;">${jobsFound}</h3>
                <p style="color: #6b7280; margin: 0; font-weight: bold;">Jobs Found</p>
              </div>
              <div style="background: white; padding: 20px; border-radius: 8px; text-align: center;">
                <h3 style="color: #7C3AED; margin: 0 0 10px 0; font-size: 32px;">${hiresFound}</h3>
                <p style="color: #6b7280; margin: 0; font-weight: bold;">New Hires</p>
              </div>
            </div>
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
              <div style="background: white; padding: 20px; border-radius: 8px; text-align: center;">
                <h3 style="color: #2563EB; margin: 0 0 10px 0; font-size: 32px;">${companiesScanned}</h3>
                <p style="color: #6b7280; margin: 0; font-weight: bold;">Companies Scanned</p>
              </div>
              <div style="background: white; padding: 20px; border-radius: 8px; text-align: center;">
                <h3 style="color: #059669; margin: 0 0 10px 0; font-size: 32px;">${successRate.toFixed(1)}%</h3>
                <p style="color: #6b7280; margin: 0; font-weight: bold;">Success Rate</p>
              </div>
            </div>
          </div>
          
          <div style="padding: 20px; text-align: center; color: #6b7280; font-size: 12px;">
            <p>Generated by Job Tracker System</p>
          </div>
        </div>
      `;

      await this.transporter.sendMail({
        from: process.env.GMAIL_USER,
        to: this.recipients.join(', '),
        subject,
        html,
      });

      console.log('‚úÖ Daily summary email sent');
      
    } catch (error) {
      console.error('‚ùå Failed to send daily summary email:', error);
    }
  }
}
